version: '3.8'

services:
  app:
    image: eclipse-temurin:21-jdk
    container_name: content_analyzer-app
    working_dir: /app
    volumes:
      - .:/app
      - gradle-cache:/root/.gradle
    command: ["./gradlew", "clean", "build", "-x", "check", "-x", "test"]
    depends_on:
      - postgres
    networks:
      - content_analyzer-network

  postgres:
    image: postgres:16-alpine
    container_name: content_analyzer-db
    environment:
      POSTGRES_DB: content_analyzer
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - content_analyzer-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    container_name: content_analyzer-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    command:
      - start-dev
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - content_analyzer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  content_analyzer-network:
    driver: bridge

volumes:
  postgres-data:
  gradle-cache:
